{"version":3,"file":"static/js/647.1b8464b4.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControl.js","components/hoc/WithAuthRedirect.js","utils/validators/validator.js","webpack://my-app/./src/components/common/FormsControls/FormControl.module.css?6f73"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MyPosts_btn__V7P7O\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__3i+xR\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://www.w3schools.com/howto/img_avatar.png\" alt=\"\" />\r\n            {props.message}\r\n            <div>\r\n                <span>Like: {props.likeCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, requiredField } from '../../../utils/validators/validator';\r\nimport { Textarea } from '../../common/FormsControls/FormsControl';\r\nconst maxLength10 = maxLengthCreator(5);\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = props.posts.map((post) => <Post message={post.message} likeCount={post.likesCount} />);\r\n    let onPostChange = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostReduxForm onSubmit={onPostChange}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements};\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[requiredField, maxLength10]} component={Textarea} name={\"newPostText\"} />\r\n            <div className={s.btn}>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostReduxForm = reduxForm({\r\n    form:'addNewPost',\r\n})(AddPostForm)\r\n\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profileContent__image\":\"ProfileInfo_profileContent__image__MxnO+\"};","import React from 'react';\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n    activateEditMode= () =>{\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n    deactivateEditMode =() =>{\r\n        this.setState({\r\n            editMode: false,\r\n        })\r\n        this.props.updateUserStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-------\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = React.useState(false);\r\n    const [status, setStatus] = React.useState(props.status);\r\n    React.useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n        props.updateUserStatus(status);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n} \r\n\r\n\r\n\r\n\r\nexport default ProfileStatus;\r\n","import Preloader from '../../common/Preloader/preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    let contacts = props.profile.contacts;\r\n    for (let key in contacts) {\r\n        if (contacts[key] != null) {\r\n            let div = document.createElement('div');\r\n            div.innerHTML = `<a href = ${contacts[key]}>click</a>`;\r\n            document.body.append(div);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.profileContent__image}>\r\n                <img src=\"https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg\" />\r\n            </div>\r\n            <div>\r\n                <img src={props.profile.photos.small} />\r\n                <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n                <div>{props.profile.fullName}</div>\r\n                <div>{props.profile.lookingForAJob ? \"Search a work\" : \"Have a job\"}</div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport './Profile.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className='profile-content'>\r\n            <ProfileInfo profile = {props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            <div></div>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport './Profile.css'\r\nimport { getUserProfile, getStatus, updateUserStatus } from '../../redux/profile-reducer';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { WithAuthRedirect } from '../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from '../../redux/withrouter';\r\nconst ProfileAPIComponent = (props) => {\r\n    debugger;\r\n    const params = useParams();\r\n    const location = useLocation();\r\n    if (!params.userId) {\r\n        params.userId = props.authUserId;\r\n    }\r\n    useEffect(() => {\r\n        props.getUserProfile(params.userId);\r\n        props.getStatus(params.userId)\r\n    }, [])\r\n    return (\r\n        <Profile profile={props.profile} status={props.status}  updateUserStatus= {props.updateUserStatus}/>\r\n    );\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateUserStatus }),\r\n    WithAuthRedirect,\r\n)(ProfileAPIComponent); \r\n\r\n\r\n","import React from \"react\"\r\nimport style from \"./FormControl.module.css\"\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return(\r\n        <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth) {\r\n                return <Navigate to=\"/login\"/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","export const requiredField = values => {\r\n    if (values) return undefined;\r\n    return \"Field is required\"\r\n}\r\nexport const maxLengthCreator = (maxLength) => (values) => {\r\n    if (values.length > maxLength) return `Max lenght is ${maxLength} symb`;\r\n    return undefined;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormControl_error__InLTO\",\"formSummaryError\":\"FormControl_formSummaryError__BZAh6\"};"],"names":["props","className","s","src","alt","message","likeCount","maxLength10","maxLengthCreator","MyPosts","React","postsElements","posts","map","post","likesCount","AddPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","validate","requiredField","component","Textarea","name","connect","state","profilePage","ProfileStatus","editMode","status","activateEditMode","setState","deactivateEditMode","updateUserStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","this","onDoubleClick","onChange","autoFocus","onBlur","profile","contacts","key","div","document","createElement","innerHTML","body","append","photos","small","fullName","lookingForAJob","compose","withRouter","authUserId","auth","userId","isAuth","getUserProfile","getStatus","WithAuthRedirect","params","useParams","useLocation","useEffect","FormControl","input","meta","touched","error","children","hasError","style","restProps","child","Input","mapStateToPropsForRedirect","Component","RedirectComponent","to","maxLength","length"],"sourceRoot":""}