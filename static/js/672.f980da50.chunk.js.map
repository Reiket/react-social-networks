{"version":3,"file":"static/js/672.f980da50.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControl.js","components/hoc/WithAuthRedirect.js","utils/validators/validator.js","webpack://my-app/./src/components/common/FormsControls/FormControl.module.css?6f73"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__-6-SU\",\"dialogs\":\"Dialogs_dialogs__RwLKY\",\"dialogs-item\":\"Dialogs_dialogs-item__a39xr\",\"item\":\"Dialogs_item__dhjg4\",\"messages\":\"Dialogs_messages__MqvQn\",\"message\":\"Dialogs_message__eYNRH\",\"avatar\":\"Dialogs_avatar__+inqQ\",\"link\":\"Dialogs_link__uYraT\"};","import { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img className={s.avatar} src={props.avatar} alt=\"\" />\r\n            <NavLink className={s.link} to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className= {s.message}>{props.message}</div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControl';\r\nimport { maxLengthCreator, requiredField } from '../../utils/validators/validator';\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} avatar= {d.avatar} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} />);\r\n    let onAddMessage = (values) => {\r\n        props.sendMessage(values.newMassageBody);\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <AddMessageReduxForm onSubmit={onAddMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst addMessageForm = (props) => {\r\n    const maxLength100 = maxLengthCreator(100);\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[requiredField, maxLength100]} component={Textarea} placeholder='Enter your message' name='newMassageBody'/>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'addNewMessage'\r\n})(addMessageForm);\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { sendMessage } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { WithAuthRedirect } from '../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    WithAuthRedirect,\r\n)(Dialogs);; ","import React from \"react\"\r\nimport style from \"./FormControl.module.css\"\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return(\r\n        <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth) {\r\n                return <Navigate to=\"/login\"/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","export const requiredField = values => {\r\n    if (values) return undefined;\r\n    return \"Field is required\"\r\n}\r\nexport const maxLengthCreator = (maxLength) => (values) => {\r\n    if (values.length > maxLength) return `Max lenght is ${maxLength} symb`;\r\n    return undefined;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormControl_error__InLTO\",\"formSummaryError\":\"FormControl_formSummaryError__BZAh6\"};"],"names":["props","className","s","src","avatar","alt","to","id","name","message","AddMessageReduxForm","reduxForm","form","maxLength100","maxLengthCreator","onSubmit","handleSubmit","Field","validate","requiredField","component","Textarea","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","sendMessage","newMassageBody","compose","connect","WithAuthRedirect","Dialogs","FormControl","input","meta","touched","error","children","hasError","style","restProps","child","Input","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React","maxLength","length"],"sourceRoot":""}