{"version":3,"file":"static/js/797.d886eb07.chunk.js","mappings":"8MAqCMA,GAAiBC,EAAAA,EAAAA,GAAU,CAC7BC,KAAK,SADcD,EAZL,SAAH,GAA+B,IAA1BE,EAAY,EAAZA,aAAcC,EAAK,EAALA,MAC9B,OAAO,kBAAMC,SAAUF,EAAa,WAChC,0BAAK,SAAC,IAAK,CAACG,SAAU,CAACC,EAAAA,GAAgBC,YAAa,QAASC,KAAM,QAASC,UAAWC,EAAAA,OACvF,0BAAK,SAAC,IAAK,CAACL,SAAU,CAACC,EAAAA,GAAgBC,YAAa,WAAYC,KAAM,WAAYC,UAAWC,EAAAA,OAC7F,4BAAK,SAAC,IAAK,CAACC,KAAM,WAAYH,KAAM,aAAcC,UAAWC,EAAAA,IAAQ,iBACpEP,IAAS,gBAAKS,UAAWC,EAAAA,EAAAA,iBAAuB,SAC5CV,KAEL,0BAAK,4BAAQ,cAErB,IASA,WAAeW,EAAAA,EAAAA,KAJS,SAACC,GAAK,MAAM,CAChCC,OAAQD,EAAME,KAAKD,OACnBE,UAAWH,EAAME,KAAKC,UACzB,GACuC,CAACC,MAAAA,EAAAA,GAAOC,QAAAA,EAAAA,IAAhD,EAnCc,SAAH,GAAwB,IAAnBJ,EAAM,EAANA,OAAOG,EAAK,EAALA,MAQnB,OAAIH,GACO,SAAC,KAAQ,CAACK,GAAG,cAEjB,4BACH,wBAAI,WACJ,SAACtB,EAAc,CAACK,SAXH,SAACkB,GAClBH,EAAMG,EAASH,MAAOG,EAASC,SAAUD,EAASE,WAClD,MAWJ,G,yLCpBMC,EAAc,SAAH,GAAU,EAALC,MAA8C,IAAxC,EAAD,EAAEC,KAAOC,EAAO,EAAPA,QAASzB,EAAK,EAALA,MAAQ0B,EAAQ,EAARA,SAC3CC,EAAWF,GAAWzB,EAC5B,OACI,iBAAKS,UAAWC,EAAAA,EAAAA,YAAoB,KAAOiB,EAAWjB,EAAAA,EAAAA,MAAc,IAAI,WACpE,yBACKgB,IAEJC,IAAY,0BAAO3B,MAGhC,EAEa4B,EAAW,SAACC,GACrB,IAAON,EAAoCM,EAApCN,MAAuBO,GAAaD,EAA7BL,KAA6BK,EAAvBE,OAAmB,OAAIF,EAAK,IAChD,OAAO,SAACP,GAAW,kBAAKO,GAAK,cAAE,uCAAcN,GAAWO,MAC5D,EACavB,EAAQ,SAACsB,GAClB,IAAON,EAAoCM,EAApCN,MAAuBO,GAAaD,EAA7BL,KAA6BK,EAAvBE,OAAmB,OAAIF,EAAK,IAChD,OAAO,SAACP,GAAW,kBAAKO,GAAK,cAAE,oCAAWN,GAAWO,MACzD,C,4ECvBO,IAAM3B,EAAgB,SAAA6B,GACzB,IAAIA,EACJ,MAAO,mBACX,EACaC,EAAmB,SAACC,GAAS,OAAK,SAACF,GAC5C,GAAIA,EAAOG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAS,QAEpE,CAAC,C,qBCND,KAAgB,MAAQ,2BAA2B,iBAAmB,sC","sources":["components/Login/Login.jsx","components/common/FormsControls/FormsControl.js","utils/validators/validator.js","webpack://my-app/./src/components/common/FormsControls/FormControl.module.css?6f73"],"sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input } from \"../common/FormsControls/FormsControl\";\r\nimport { requiredField } from \"../../utils/validators/validator\";\r\nimport { connect } from \"react-redux\";\r\nimport { captcha, login } from \"../../redux/auth-reducer\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormControl.module.css\"\r\n\r\nconst Login = ({isAuth,login}) => {\r\n    debugger;\r\n    const onSubmit = (formData) => {\r\n    login(formData.login, formData.password, formData.rememberMe)\r\n    }\r\n    // if(props.isCaptcha) {\r\n    //     alert('afawf');\r\n    // }\r\n    if (isAuth) {\r\n        return <Navigate to=\"/profile\"/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><Field validate={[requiredField]} placeholder={\"Login\"} name={\"login\"} component={Input}/></div>\r\n        <div><Field validate={[requiredField]} placeholder={\"Password\"} name={\"password\"} component={Input}/></div>\r\n        <div><Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}/>Remember me</div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div><button>login</button></div>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form:'login',\r\n})(LoginForm);\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    isCaptcha: state.auth.isCaptcha,\r\n})\r\nexport default connect(mapStateToProps, {login, captcha}) (Login);","import React from \"react\"\r\nimport style from \"./FormControl.module.css\"\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return(\r\n        <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n","export const requiredField = values => {\r\n    if (values) return undefined;\r\n    return \"Field is required\"\r\n}\r\nexport const maxLengthCreator = (maxLength) => (values) => {\r\n    if (values.length > maxLength) return `Max lenght is ${maxLength} symb`;\r\n    return undefined;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormControl_error__InLTO\",\"formSummaryError\":\"FormControl_formSummaryError__BZAh6\"};"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","validate","requiredField","placeholder","name","component","Input","type","className","style","connect","state","isAuth","auth","isCaptcha","login","captcha","to","formData","password","rememberMe","FormControl","input","meta","touched","children","hasError","Textarea","props","restProps","child","values","maxLengthCreator","maxLength","length"],"sourceRoot":""}